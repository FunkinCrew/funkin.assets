import flixel.FlxG;
import flixel.FlxSprite;
import flixel.math.FlxBasePoint;
import flixel.tweens.FlxEase;
import flixel.tweens.FlxTween;
import flixel.util.FlxTimer;
import funkin.audio.FunkinSound;
import funkin.Conductor;
import funkin.graphics.adobeanimate.FlxAtlasSprite;
import funkin.graphics.FunkinSprite;
import funkin.modding.base.ScriptedFlxAtlasSprite;
import funkin.Paths;
import funkin.play.cutscene.CutsceneType;
import funkin.play.GameOverSubState;
import funkin.play.PlayState;
import funkin.play.PlayStatePlaylist;
import funkin.play.song.Song;
import funkin.play.stage.StageProp;
import funkin.save.Save;
import flixel.text.FlxText;
import flixel.text.FlxTextBorderStyle;
// We have to use FlxBasePoint in scripts because FlxPoint is inlined and not available in scripts

class EggnogSong extends Song
{
	  //var santaDead:ScriptedFlxAtlasSprite;

	var hasPlayedCutscene:Bool = false;
	var cutsceneSkipped:Bool = false;
	var canSkipCutscene:Bool = false;
	var santaSound:FunkinSound;
	var shootSound:FunkinSound;

	var debugTesting:Bool = false;
	function new()
	{
		super('eggnog');	
	}

	public override function onCountdownStart(event:CountdownScriptEvent):Void {
		super.onCountdownStart(event);
		trace(PlayState.instance.currentVariation);
	}

	function onSongRetry(event:ScriptEvent)
	{
		super.onSongRetry(event);

	}

	public override function isSongNew(currentDifficulty:String):Bool{
		if(currentDifficulty == 'easy-pico' || currentDifficulty == 'normal-pico' || currentDifficulty == 'hard-pico'){
		  if (Save.instance.hasBeatenSong(this.id, ['easy-pico', 'normal-pico', 'hard-pico']) == false) return true;
		}
    return false;
	}

  public override function listAltInstrumentalIds(difficultyId:String, variationId:String):Array<String> {
		if (difficultyId == 'easy' || difficultyId == 'normal' || difficultyId == 'hard') {
    	var hasBeatenPicoMix = Save.instance.hasBeatenSong(this.id, ['easy-pico', 'normal-pico', 'hard-pico']);

    	switch (variationId) {
    	  case 'pico':
    	    // return hasBeatenPicoMix ? [''] : [];
    	    // No Pico mix on BF instrumental, sorry!
    	    return [];
    	  default:
    	    return hasBeatenPicoMix ? ['pico'] : [];
    	}
		}
  }

	public override function onSongEnd(event:CountdownScriptEvent):Void {
		super.onSongEnd(event);
   	if (PlayState.instance.currentVariation != 'erect') hasPlayedCutscene = true;
		// only play this on erect..

    if (!hasPlayedCutscene) {
      hasPlayedCutscene = true;

      event.cancel();

			// start the video cutscene and hide it so the other stuff can happen after
      startCutscene();
    } else {
			// Make sure the cutscene can play again next time!
			hasPlayedCutscene = false;
			// DO NOT CANCEL THE EVENT!
		}
	}
	var skipText:FlxText;

	function startCutscene(){

		skipText = new FlxText(936, 618, 0, 'Skip [ ' + PlayState.instance.controls.getDialogueNameFromToken("CUTSCENE_ADVANCE", true) + ' ]', 20);
    skipText.setFormat(Paths.font('vcr.ttf'), 40, 0xFFFFFFFF, "right", FlxTextBorderStyle.OUTLINE, 0xFF000000);
    skipText.scrollFactor.set();
		skipText.borderSize = 2;
		skipText.alpha = 0;
     PlayState.instance.currentStage.add(skipText);

    skipText.cameras = [PlayState.instance.camCutscene];
	
    var normalSanta = PlayState.instance.currentStage.getNamedProp('santa');
    normalSanta.visible = false;

    var santaDead:ScriptedFlxAtlasSprite = ScriptedFlxAtlasSprite.init('SantaDiesSprite', 0, 0);

    santaDead.x = -458;
		santaDead.y = 498;
		santaDead.zIndex = normalSanta.zIndex - 1;

    PlayState.instance.currentStage.add(santaDead);
		PlayState.instance.currentStage.refresh(); // Apply z-index.

    santaDead.scriptCall('playCutscene');

    PlayState.instance.currentStage.getDad().visible = false;
    var parentsShoot:ScriptedFlxAtlasSprite = ScriptedFlxAtlasSprite.init('DadShootsSprite', 0, 0);

    parentsShoot.x = -516;
		parentsShoot.y = 503;
		parentsShoot.zIndex = santaDead.zIndex - 1;

    PlayState.instance.currentStage.add(parentsShoot);
		PlayState.instance.currentStage.refresh(); // Apply z-index.

    parentsShoot.scriptCall('playCutscene');

		//FlxTween.tween(PlayState.instance.camHUD, {alpha: 0}, 1);

		PlayState.instance.isInCutscene = true;
		hasPlayedCutscene = true;

		PlayState.instance.currentStage.getBoyfriend().danceEvery = 0;
		PlayState.instance.currentStage.getDad().danceEvery = 0;

    PlayState.instance.tweenCameraToPosition(santaDead.x + 300, santaDead.y, 2.8, FlxEase.expoOut);
		//PlayState.instance.tweenCameraToPosition(santaDead.x + 300, santaDead.y, 2.8, FlxEase.expoOut);
		PlayState.instance.tweenCameraZoom(0.73, 2, true, FlxEase.quadInOut);

		santaSound = FunkinSound.load(Paths.sound('santa_emotion'), 1);
		santaSound.volume = 1;
		santaSound.play(false);

		shootSound = FunkinSound.load(Paths.sound('santa_shot_n_falls'), 1);
		shootSound.volume = 1;
		
		new FlxTimer().start(2.8, function(tmr)
		{
			PlayState.instance.tweenCameraToPosition(santaDead.x + 150, santaDead.y, 9, FlxEase.quartInOut);
			PlayState.instance.tweenCameraZoom(0.79, 9, true, FlxEase.quadInOut);
		});


		new FlxTimer().start(11.3, function(tmr){
			//PlayState.instance.tweenCameraZoom(0.73, 0.8, true, FlxEase.backOut);
			//PlayState.instance.tweenCameraToPosition(santaDead.x + 220, santaDead.y, 0.8, FlxEase.expoOut);
			//PlayState.instance.camGame.shake(0.007, 0.4);
		});
	
		
		new FlxTimer().start(11.375, function(tmr){
				if(!cutsceneSkipped)shootSound.play(false);
		});
	

		new FlxTimer().start(12.83, function(tmr)
		{
			PlayState.instance.camGame.shake(0.005, 0.2);
			PlayState.instance.tweenCameraToPosition(santaDead.x + 160, santaDead.y + 80, 5, FlxEase.expoOut);
		});


		new FlxTimer().start(15, function(tmr)
		{
			PlayState.instance.camHUD.fade(0xFF000000, 1, false, null, true);
		});
		
			new FlxTimer().start(16, function(tmr)
			{
				if(!cutsceneSkipped)
				{
					PlayState.instance.camHUD.fade(0xFF000000, 0.5, true, null, true);
					PlayState.instance.endSong(true);
				}
			});
		
	}

	function onUpdate(event:UpdateScriptEvent) {
		super.onUpdate(event);
		if(PlayState.instance.isInCutscene)
		{
			if (PlayState.instance.controls.CUTSCENE_ADVANCE && cutsceneSkipped == false)
    		{
				if(canSkipCutscene == false){
					trace('cant skip yet!');
					FlxTween.tween(skipText, {alpha: 1}, 0.5, {ease: FlxEase.quadOut});
					new FlxTimer().start(0.5, _ -> {
						canSkipCutscene = true;
						trace('can skip!');
					});
				}
   			}
		}

		if(PlayState.instance.controls.CUTSCENE_ADVANCE  && canSkipCutscene)
		{
			PlayState.instance.camCutscene.fade(0xFF000000, 0.5, false, null, true);
			FlxTween.tween(skipText, {alpha: 0}, 0.5, {ease: FlxEase.quadOut});
			cutsceneSkipped = true;
			santaSound.stop();
			shootSound.stop();
			new FlxTimer().start(0.5, function(tmr)
			{
				PlayState.instance.endSong(true);
			});		

		} 
	}

	/**
   * Replay the cutscene after leaving the song.
   */
  function onCreate(event:ScriptEvent):Void
  {
    super.onCreate(event);
	cutsceneSkipped = false;
	canSkipCutscene = false;
    hasPlayedCutscene = false;
  }
}
