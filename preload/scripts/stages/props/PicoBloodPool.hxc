import funkin.graphics.adobeanimate.FlxAtlasSprite;
import flixel.math.FlxPoint;
import flixel.math.FlxMatrix;
import flixel.FlxSprite;
import funkin.graphics.FunkinSprite;
import funkin.play.PlayState;
import flixel.util.FlxTimer;
import flixel.FlxG;
import funkin.Preferences;
import funkin.audio.FunkinSound;

class PicoBloodPool extends FlxAtlasSprite
{

  var extend:Bool = false;

  var el = null;
  var initialMat = null;

  public function new(x:Float, y:Float)
  {
    var path = (Preferences.naughtyness) ? "bloodPool" : "picoFlowers";

    super(x, y, Paths.animateAtlas("philly/erect/" + path, "week3"), {
      FrameRate: 24.0,
      Reversed: false,
      // ?OnComplete:Void -> Void,
      ShowPivot: false,
      Antialiasing: true,
      ScrollFactor: new FlxPoint(1, 1),
    });

   // onAnimationFinish.add(finishCanAnimation);
    if (Preferences.naughtyness)
    {
      onAnimationComplete.addOnce((_)->{
        el = anim.curSymbol.getElement(0);
        initialMat = new FlxMatrix();
        initialMat.copyFrom(el.matrix);
        extend = true;
      });
    }
    // else
    //   onAnimationComplete.add((_)->this.anim.play(true));


    this.visible = false;
  }

  public function doAnim(){
    playAnimation(anim.stageInstance.symbol.name, true, false, !Preferences.naughtyness);
    //backingTextYeah.anim.play("");
    this.visible = true;
  }

  public function resetMatrix() {
    el.matrix.copyFrom(initialMat);
  }

  override public function update(elapsed:Float)
  {
    super.update(elapsed);
    if (extend)
    {
      var val = 0.02 * elapsed;

      var mat = el.matrix;
      mat.a += val;
      mat.d += val;

      mat.tx -= el.symbol.transformationPoint.x * val;
      mat.ty -= el.symbol.transformationPoint.y * val;
    }

  }
}
